/*
 * Copyright (C) 2017 Henrik Langer henni19790@googlemail.com
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */
/dts-v1/;
/plugin/;

/ {
	compatible = "ti,beaglebone", "ti,beaglebone-black", "ti,beaglebone-green";

	/* identification */
	part-number = "BELA";
	version = "00A0", "A0";

	exclusive-use =
		/* the pin header uses */
		"P9.31",	/* mcasp0: mcasp0_aclkx */
		"P9.29",	/* mcasp0: mcasp0_fsx */
		"P9.28",	/* mcasp0: mcasp0_axr2 */
		"P9.25",	/* mcasp0: mcasp0_ahclkx */
		"P8.41",	/* pru1: pr1_pru1_pru_r30_4 */
		"P8.42",	/* pru1: pr1_pru1_pru_r30_5 */
		"P8.43",	/* pru1: pr1_pru1_pru_r30_2 */
		"P8.44",	/* pru1: pr1_pru1_pru_r30_3 */
		"P8.45",	/* pru1: pr1_pru1_pru_r30_0 */
		"P8.46",	/* pru1: pr1_pru1_pru_r30_1 */
		"P9.27",	/* gpio3_19 (Bela button) */
		/* the hardware ip uses */
		"gpio1_18", "gpio1_19",
		"mcasp0", "pru0", "pru1";

	/* Pinmux settings */
	fragment@0 {
		target = <&am33xx_pinmux>;
		__overlay__ {

			bone_audio_cape_audio_pins: pinmux_bone_audio_cape_audio_pins {
				pinctrl-single,pins = <
					0x1ac 0x00 /* mcasp0_ahclkx, MODE0 | INPUT */
					0x19c 0x22 /* mcasp0_ahclkr, */
					0x194 0x20 /* mcasp0_fsx, MODE0 | OUTPUT  */
					0x190 0x20 /* mcasp0_aclkr.mcasp0_aclkx, MODE0 | OUTPUT_PULLDOWN */
					0x198 0x20
				>;
			};

			pru_bela_pins: pinmux_pru_bela_pins {
				pinctrl-single,pins = <
					0x0b0 0x25 /* lcd_data4.pr1_pru1_pru_r30_4, MODE5 | OUTPUT | PRU */
					0x0b4 0x25 /* lcd_data5.pr1_pru1_pru_r30_5, MODE5 | OUTPUT | PRU */
					0x0ac 0x25 /* lcd_data3.pr1_pru1_pru_r30_3, MODE5 | OUTPUT | PRU */
					0x0a0 0x25 /* lcd_data0.pr1_pru1_pru_r30_0, MODE5 | OUTPUT | PRU */
					0x0a4 0x25 /* lcd_data1.pr1_pru1_pru_r30_1, MODE5 | OUTPUT | PRU */
					0x0a8 0x25 /* lcd_data2.pr1_pru1_pru_r30_2, MODE5 | OUTPUT | PRU */
				>;
			};

			bela_button_pin: pinmux_bela_button_pin {
				pinctrl-single,pins = <0x1a4 0x37>;
			};

			gpio_bela_pins: pinmux_gpio_bela_pins {
				pinctrl-single,pins = <
					0x90 0x27 
					0x94 0x27 
					0x9c 0x27 
					0x98 0x27 
					0x34 0x27 
					0x30 0x27 
					0x78 0x27 
					0x48 0x27 
					0x3c 0x27 
					0x38 0x27 
					0x4c 0x27 
					0x8c 0x27 
					0xe0 0x27 
					0xe8 0x27 
					0xe4 0x27 
					0xec 0x27
				>;
			};

			/* TODO: Check if i2c1 is required by Bela (took from am335x-boneblack.dts Bela master branch) */
			i2c1_pins: pinmux_i2c1_pins {
				pinctrl-single,pins = <
					0x180 0x73
					0x184 0x73
				>;
			};

			/* TODO: Check if i2c2 is required by Bela (took from am335x-boneblack.dts Bela master branch) */
			i2c2_pins: pinmux_i2c2_pins {
				pinctrl-single,pins = <
					0x150 0x72 	/* spi0_scl.i2c2_sda,SLEWCTRL_SLOW | INPUT_PULLUP |MODE2 */
					0x154 0x72	/* spi0_d0.i2c2_scl,SLEWCTRL_SLOW | INPUT_PULLUP | MODE2 */
				>;
			};

			/* TODO: Check if reset ctl pin is required by Bela (took from am335x-boneblack.dts Bela master branch) */
			/*rstctl_pins: pinmux_rstctl_pins {
				pinctrl-single,pins = <
					0x50 0x17
				>;
			};*/
		};
	};

	/* McASP (DAI of AM335X) */
	fragment@1 {
		target = <&mcasp0>;
		__overlay__ {
			pinctrl-names = "default";
			pinctrl-0 = <&bone_audio_cape_audio_pins>;

			status = "okay";

			op-mode = <0>;	/* MCASP_IIS_MODE */
			tdm-slots = <2>;
			num-serializer = <16>;
			serial-dir = <  /* 0: INACTIVE, 1: TX, 2: RX */
				2 0 1 0
				0 0 0 0
				0 0 0 0
				0 0 0 0
			>;
			tx-num-evt = <1>;
			rx-num-evt = <1>;
		};
	};

	/* PRU */
	fragment@2 {
		target = <&pruss>;
		__overlay__ {
			status = "okay";

			pinctrl-names = "default";
			pinctrl-0 = <&pru_bela_pins>;
		};
	};

	/* Pinmux for Bela button */
	fragment@3 {
		target = <&ocp>;
        __overlay__ {
            bela_button_pin_mux {
                compatible = "bone-pinmux-helper";
                status = "okay";
                pinctrl-names = "default";
                pinctrl-0 = <&bela_button_pin>;
            };
        };
	};
};
